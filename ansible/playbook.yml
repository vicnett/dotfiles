- name: Configure and/or update CLI environment
  hosts: localhost
  connection: local

  vars:
    arch_distro: "Archlinux"
    ubuntu_distro: "Ubuntu"
    supported_distros: [ "{{ arch_distro }}", "{{ ubuntu_distro }}" ]
    base_dir: '{{ playbook_dir | dirname }}'
    gitignore_path: '{{ base_dir }}/git/gitignore'
    git_aliases_path: '{{ base_dir }}/aliases/git'
    arch_packages: "{{ lookup('file', base_dir ~ '/arch_packages').splitlines() }}"
    ubuntu_packages: "{{ lookup('file', base_dir ~ '/ubuntu_packages').splitlines() }}"

  tasks:
    - ansible.builtin.debug:
        msg: "supported_distros: {{ supported_distros }}"
    - name: Stop if OS is unsupported
      fail:
        msg: "{{ ansible_distribution }} not supported"
      when: ansible_distribution not in supported_distros

    - name: Install packages (Arch)
      ansible.builtin.package:
        name: "{{ packages }}"
        state: present
      vars:
        packages: "{{ arch_packages }}"
      become: true
      tags: packages
      when: ansible_distribution == arch_distro

    - name: Install packages (Ubuntu)
      ansible.builtin.package:
        name: "{{ packages }}"
        state: present
      vars:
        packages: "{{ ubuntu_packages }}"
      become: true
      tags: packages
      when: ansible_distribution == ubuntu_distro

    - name: Change shell to zsh
      become: yes
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /usr/bin/zsh

    - name: Install dotfiles
      ansible.builtin.shell: ~/.dotfiles/install
      register: dotbot_output
      changed_when: '"Creating" in dotbot_output.stdout'

    - name: Git configuration
      block:

      - name: Configure global .gitignore file
        community.general.git_config:
          name: core.excludesfile
          scope: global
          value: '{{ gitignore_path }}'

      - name: Include git aliases file
        community.general.git_config:
          name: include.path
          scope: global
          value: '{{ git_aliases_path }}'

      - name: Make default branch "main"
        community.general.git_config:
          name: init.defaultBranch
          scope: global
          value: main

      - name: Automatically set up remote tracking branch when pushing
        community.general.git_config:
          name: push.autoSetupRemote
          scope: global
          value: true
